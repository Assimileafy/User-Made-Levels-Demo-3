//# address-hook(0x0528c8) end(0x0528c8)
function void fn0528c6()
{
	fn052974()
}


//# address-hook(0x052972) end(0x0529f8)
function void fn052972()
{
	if (u16[0xffffeec6] != 0)
	{
		u16[0xffffeec6] = 0

		u32 backupD7 = D7
		u32 backupA0 = A0
		u32 backupA2 = A2
		u32 backupA3 = A3

		requestLoadingPatterns(0x1c)
		System.loadExternalRawData("ZZZ_FBZ2Chunks", 0x820000)
		Kosinski.addToDecompressionQueue(0x820000, 0xffff0000) // chunks
		//Kosinski.addToDecompressionQueue(0x81BBC7, 0xffff9000) // blocks
		//Kosinski.addToDMAQueue(0x852dfa, 0x00) // tiles

		D7 = backupD7
		A0 = backupA0
		A2 = backupA2
		A3 = backupA3

		level.scrolling_routine += 2

	}
	else
	{
		if (u8[0xffffb005] >= 0x06 && !(debug_mode.state))
			return

		fn052ab2()
		if (checkForMultiReturn())
			return
	}

	fn0529fc()
}


function void fn052974()
{
	if (kosinski.waiting_modules == 0)
	{
		global.zone_act = 0x0401
		camera.update_routine = 0
		dynobjects.routine = 0
		rings.update_routine = 0
		level.boss_encounter = 0
		global.in_extra_stage = 0

		u32 backupD7 = D7
		u32 backupA0 = A0
		u32 backupA2 = A2
		u32 backupA3 = A3

		fn04f8f8()
		fn01c362()
		fn0076a6()

		Level.loadPaletteData(0x13)
		
		D7 = backupD7
		A0 = backupA0
		A2 = backupA2
		A3 = backupA3

		D0.u16 = 0x2e00
		D1 = 0
		u16[0xffffb010] -= D0.u16
		u16[0xffffb05a] -= D0.u16
		fn04f3b0()				
		camera.position.x.u16 -= D0.u16
		camera.foreground.x.u16 -= D0.u16
		move_area.left -= D0.u16
		move_area.right -= D0.u16
		Level.GetCameraPosition()
		
		level.display_routine = 0
		u16[0xffffeed4] = 0
		u32[0xffffeee6] = 0
		u16[0xffffeea0] = 0
		u16[0xffffef40] = 0
		u16[0xffffeebe] = 0

		fn052a2a()
		fn04f2f6()
		
		level.scrolling_routine = 0
		D1 = 0
		Level.InitialTilesFill()
	}
	fn0529fc()
}

//FBZ2's BG Init
//# address-hook(0x052fa8) end(0x053018)
function void fn052fa8()
{
	base.fn052fa8()
	System.loadExternalRawData("ZZZ_FBZ2Chunks", 0x820000)
	Kosinski.addToDecompressionQueue(0x820000, 0xffff0000) // chunks
}